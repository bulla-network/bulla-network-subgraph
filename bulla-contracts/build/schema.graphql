enum ClaimType {
  INVOICE
  PAYMENT
}

enum ClaimStatus {
  PENDING
  PAID
  REJECTED
  RESCINDED
  REPAYING
}
interface EventLog {
  eventName: String!
  blockNumber: BigInt!
  transactionHash: String!
  timestamp: BigInt!
}
# base event log related to a claim, includes token id and all event metadata
interface ClaimEvent {
  tokenId: Claim!
  eventName: String!
  blockNumber: BigInt!
  transactionHash: Bytes!
  timestamp: BigInt!
}
type Token @entity {
  id: ID!
  address: Bytes! #address
  decimals: Int!
  symbol: String!
  chainId: String!
  isNative: Boolean!
}
## BEGIN EVENTS:
# todo: implement
#type ClaimPaymentEvent implements ClaimEvent @entity {
#  id: ID!
#  eventName: String!
#  blockNumber: BigInt!
#  transactionHash: String!
#  timestamp: BigInt!
#}

#type ClaimRejectedEvent implements ClaimEvent @entity {#
#  id: ID!
#  eventName: String!
#  blockNumber: BigInt!
#  transactionHash: String!
#  timestamp: BigInt!
#}

#type ClaimRescindedEvent implements ClaimEvent @entity {
#  id: ID!
#  eventName: String!
#  blockNumber: BigInt!
#  transactionHash: String!
#  timestamp: BigInt!
#}

type User @entity {
  id: ID!
  address: Bytes! #address
  claims: [Claim!]!
}

type ClaimCreatedEvent @entity {
  id: ID!
  bullaManager: Bytes! #address
  tokenId: String!
  parent: Bytes! #address TODO: change this?
  creator: Bytes! #address
  debtor: Bytes! #address
  creditor: Bytes! #address
  claimToken: Token! #address
  description: String!
  ipfsHash: String
  amount: BigInt!
  dueBy: BigInt!
  eventName: String!
  blockNumber: BigInt!
  transactionHash: Bytes!
  timestamp: BigInt!
}

##END EVENTS ^^^

type Claim @entity {
  id: ID!
  tokenId: String!
  # logs: [ClaimEvent!]! #@derivedFrom(field: "tokenId")
  accountTag: String
  ipfsHash: String
  creator: Bytes! # address
  creditor: Bytes! # address
  debtor: Bytes! # address
  amount: BigInt!
  paidAmount: BigInt!
  isTransferred: Boolean!
  description: String!
  created: BigInt!
  dueBy: BigInt!
  claimType: ClaimType!
  token: Token!
  status: ClaimStatus!
  transactionHash: Bytes!
}
